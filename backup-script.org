#+title: Arch Backup/Restore Script
* Filesystem Overview
:PROPERTIES:
:VISIBILITY: folded
:END:
** TODO Standardize linking presentation
** etc/
*** profile
Created during arch install and optionally copied to  [[* .xprofile][~/.xprofile]]
*** X11/
**** xinit/
***** xinitrc
Created during arch install (awesomewm flavor) and optionally copied to [[* .xinitrc][~/.xinitrc]]
***** xinitrc.d/ :ignore:
Do nothing
***** xerverrc   :ignore:
Do nothing
**** xorg.conf.d/
Xorg configuration files (for more info see [[https://www.x.org/releases/current/doc/man/man5/xorg.conf.5.xhtml][xorg docs]])
***** 00-keyboard.conf
***** 30-touchpad.conf
*** oblogout.conf
+ TODO check if we can move this to ~/.config
Copy single file (see [[* Backing up oblogout][Backing up /etc/oblogout.conf]])
*** cups/
Copy entire directory (see [[* Backing up cups][Backing up /etc/cups/]])
*** pacman.conf
Copy the single configuration file (see [[* pacman.conf][Backing up pacman.conf]])
*** fonts/
For a specific listing of what we choose to back up see [[* Backing up Font Configuration][Backing up Font Configuration]]
**** conf.avail/
Copy over  specific font preferences in case we ever need them
**** conf.d/
Symlink the desired entries from ~/usr/share/fontconfig/conf.avail~
**** fonts.conf
We don't ever touch this file as it's automatically regenrated each time we run ~fc-cache -fv~
**** local.conf
This contains our system wide font preferences, and can be overridden on a per user basis by making corresponding file entries in ~$HOME/.config/fontconfig/conf.d/~ and in ~$HOME/.config/fontconfig/fonts.conf~. For more info, see the article on font configuration in the [[https://wiki.archlinux.org/title/font_configuration][arch wiki]]. Currently, I have no need for per user customizations.
** usr/
*** share/
**** fontconfig/
***** conf.default/
** /home/$USER/
*** systemd/
**** user/
Here we are manily after the service units we've created. Less so ones that have been placed here by pacman. See [[* Backing up systemd Units][Backing up systemd Units]]
*** lightdm/
**** lightdm.conf
**** lightdm-gtk-greeter.conf
**** slick-greeter.conf
*** .xinitrc
Optionally copied from [[* xinitrc][/etc/X11/xinitrc]]
*** .xprofile
Optionally copied from [[* profile][/etc/profile]]
*** passwd
Copy the single file. See [[* Backing up Groups][Backing up Groups]]
*** group
Copy the single file. See [[* Backing up Groups][Backing up Groups]]
*** sudoers
Only the single file. See [[* Backing up Sudoers][Backing up Sudoers Configuration]]
*** share/
**** fontconfig/
***** conf.default/
*** cache/
**** pacman/
***** pkg/
We copy the entire directory of the pacman cache

** PROG var/
** PROG usr/
** /home/$USER/
For the purpose of the script we will be bulk copyting the entire home directory using ~rsync~, so we do not list out the contents of the directory here.
** ...rest
*** TODO bin -> usr/bin/
*** TODO boot/
*** TODO dev/
*** TODO lib -> usr/lib/
*** TODO lib64 -> usr/lib/
*** TODO mnt/
*** TODO opt/
*** TODO proc/
*** TODO root/
*** TODO run/
*** TODO sbin -> usr/bin/
*** TODO .snapshots/
*** TODO srv/
*** TODO sys/
*** TODO tmp/
*** TODO var/

* Backing Up
** Generate Package Lists
*** List Explicitly Installed Packages from Pacman
#+begin_src sh :results packages :tangle backup.sh
pacman -Qqen > pacman-packages.txt
#+end_src

#+RESULTS:

*** List Explicitly Installed AUR Packages
#+begin_src sh :results aur-packages :tangle backup.sh
pacman -Qqem > aur-packages.txt
#+end_src

#+RESULTS:
** Copy pacman cache
#+begin_src sh :eval never :tangle backup.sh
sudo mkdir -p $BACKUPPATH/root/var/cache/pacman/
sudo cp -r /var/cache/pacman/pkg/  $BACKUPPATH/root/var/cache/pacman/
#+end_src
** Create Backup Destination
#+begin_src sh :eval never :tangle backup.sh
read -p "Backup Destination: " BACKUPDEST
BACKUPPATH=$BACKUPDEST/$USER-backup
mkdir -p $BACKUPPATH$HOME
BACKUPPATH=$BACKUPDEST/$USER-backup/
#+end_src

** Backup Home Folder
#+begin_src sh :eval never :tangle backup.sh
mkdir -p $BACKUPDEST$HOME
rsync -aHv --progress --preallocate $HOME $BACKUPDEST/$USER-backup/home/
#+end_src
** Selectively Backup Root Directory
*** etc/
#+begin_src sh :eval never :tangle backup.sh
sudo mkdir -p $BACKUPPATH/root/etc
#+end_src
**** Backing up cups
#+begin_src sh :eval never :tangle backup.sh
sudo cp -r /etc/cups/ $BACKUPPATH/root/etc/
#+end_src
**** Backing up pacman
#+begin_src sh :eval never :tangle backup.sh
sudo cp /etc/pacman.conf $BACKUPPATH/root/etc/
#+end_src
**** Backing up oblogout
#+begin_src sh :eval never :tangle backup.sh
sudo cp /etc/oblogout.conf $BACKUPPATH/root/etc/
#+end_src
**** Backing up Font Configuration
First we make the necessary backup path
+ TODO check vanilla install to determine if we need to create/alter contents of ~/conf.d~
#+begin_src sh :eval never :tangle backup.sh
sudo mkdir -p $BACKUPPATH/root/etc/fonts
#+end_src
Then we can copy over ~conf.avail/~ and our configuration file, ~fonts.conf~
#+begin_src sh :eval never :tangle backup.sh
sudo cp /etc/fonts/local.conf $BACKUPPATH/root/etc/fonts/
sudo cp -r /etc/fonts/conf.avail $BACKUPPATH/root/etc/fonts/
#+end_src
Now we need to generate a list of the files in ~conf.d~ so that we can properly symlink them from ~/usr/share/fontconfig/conf.avail/~ during the restore. See this [[https://stackoverflow.com/questions/9011233/for-files-in-directory-only-echo-filename-no-path][stack overflow]] link for some insight into the options we have for scripting this.
#+begin_src sh :results fontconfig :tangle backup.sh
find /etc/fonts/conf.d -name '*.conf' -printf "%f\n" > fontconfig-entries.txt
#+end_src

#+RESULTS:

See [[* Restoring Font Configuration][Restoring Font Configuration]] for executing the restore      .
**** Backing up lightm Configuration
#+begin_src sh :eval never :tangle backup.sh
sudo cp -r /etc/lightdm/ $BACKUPPATH/root/etc/
#+end_src
**** Backing up X11 Configuration
Even though I'm mainly interested in the contents of ~/etc/X11/xorg.conf.d~, I am going to copy the entire ~X11~ directory to simply things and (maybe?) futureproof them.
#+begin_src sh :eval never :tangle backup.sh
sudo cp -r /etc/X11/ $BACKUPPATH/root/etc/
#+end_src
**** Backing up systemd Units
#+begin_src sh :eval never :tabgle backup.sh
find /etc/systemd/user/ -type f -regex '.*\.\(service\|timer\)$' -exec cp {} $BACKUPPATH/root/etc/systemd/user/ \;
#+end_src
**** Backing up Groups
#+begin_src sh :eval never :tangle backup.sh
sudo cp /etc/passwd $BACKUPPATH/root/etc/
sudo cp /etc/group $BACKUPPATH/root/etc/
#+end_src

**** Backing up Sudoers
#+begin_src sh :eval never :tangle backup.sh
sudo cp /etc/sudoers $BACKUPPATH/root/etc/
#+end_src

* Restoring
** Restore Packages
*** Install Pacman Packages
#+begin_src sh :eval never :tangle restore.sh
sudo pacman -Syu --needed - < pacman-packages.txt
#+end_src

#+RESULTS:

*** Restore AUR Packages
**** Install Yay
Install ~yay~ using the command from the [[https://github.com/Jguer/yay][repository's homepage]]
#+begin_src sh :tangle restore.sh :eval never
sudo pacman -Syu --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si
#+end_src

#+RESULTS:

**** Install Aur Packages
#+begin_src sh :eval never :tangle restore.sh
yay -Syu --needed - < aur-packages.txt
#+end_src
** Restore Home Folder
** Selectively Restore Root Folder
*** Restoring Font Configuration
Restore ~/etc/fonts/conf.d~ by making the appropriate symlinks from ~/usr/share/fontconfig/conf/avail~. See this [[https://superuser.com/questions/180251/copy-list-of-files][stack overflow]] post for options building the script.
#+begin_src sh :tangle restore.sh
for file in $(<fontconfig-entries.txt); do ln -s /usr/share/fontconfig/conf.avail/"$file" /etc/fonts/conf.d/; done
#+end_src

#+RESULTS:






# Local Variables:
# eval: (flyspell-mode -1)
# End:
